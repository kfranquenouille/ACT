FRANQUENOUILLE Kevin
CORNETTE Damien

============================================
TP2 ACT


Utilisation : java ACT_TP2.java

============================================

Q1/ Le profil C semble le plus proche du profil A. En effet, seules les préférences 5, 1 et 3 ne sont pas dans le même ordre. 
	Comparé au profil B, il s'agit de la préférence inversée de C. Les préférences A et C restent quand même assez proche.

	Pour mesurer la distance la distance entre 2 listes de différences, nous avons trouvé la somme des distances des mêmes nombre entre les 2 listes.
	Par exemple :
	A : 0 3 5 1 4 2
	C : 0 5 1 3 4 2
	---------------
		0 2 1 1 0 0 = 4

	A : 0 3 5 1 4 2 
	B : 2 4 3 1 5 0
	---------------
		5 1 2 0 3 5 = 16

Q2/ Pour A et B il y a 13 inversions :
	(0,2) A préfère 0 à 2, B préfère 2 à 0.
	(3,4) A préfère 3 à 4, B préfère 4 à 3.
	(5,4) A préfère 5 à 4, B préfère 4 à 5.
	Il y a également (0,3), (0,5), (0,1), (0,4), (3,2), (5,1), (5,2), (1,4), (1,2), (4,2) 

	Pour n articles, il n²-n inversions de préférences au maximum entre 2 listes de préferences.

Q3/ On remarque que le nombre d'inversions et la distance entre X et Y sont les mêmes. En effet, les inversions permettent de trouver la distance plus facilement.

Q4/ Voir méthode public int[] normalize (final int[] model, final int[] liste)

Q5.1/ Voir méthode public int nombreInversions(final int[] liste)

Q5.2/ Voir méthode public int nombreInversionsAmeliore(final int[] liste)

Q6/ Voir méthode main

Q7/ Etant donné qu'on a implémenté 2 fois la même fonction mais de 2 manières différentes, nous avons réussi à avoir une fonction plus rapide qu'une autre.
	En effet, la méthode public int nombreInversionsAmeliore(final int[] liste) est la pide car elle est bien en (n log n) tandis que l'autre est en n².
	Sur des tableaux de grandes tailles il y a une très nette différence.


